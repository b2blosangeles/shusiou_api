var mysql = require(env.space_path + '/api/inc/mysql/node_modules/mysql');

var CP = new pkg.crowdProcess();
var _f = {};

_f['Q0_A'] = function(cbk) {
	var cfg0 = require(env.space_path + '/api/cfg/db.json');
	var connection = mysql.createConnection(cfg0);
	connection.connect();
	var CP1 = new pkg.crowdProcess();
	var _f1 = {}	

	_f1['B'] = function(cbk) {
		var str = "TRUNCATE TABLE `videos_test`";
		connection.query(str, function (error, results, fields) {
			// connection.end();
			if (error) {
				cbk(error.message);
				return true;
			} else {
				cbk(results);
			}
		}); 
	};	

	for (var i=0; i < 100; i++) {
		_f1[''+i] = (function(i) {
			return function(cbk) {
				var str = "INSERT INTO `videos_test` (`uid`, `source`, `code`, `title`, `length`, `size`) VALUES "+
				"(1, 'youtube', 'A00"+i+"', 'T00"+i+"', 320, 5000000);";
				connection.query(str, function (error, results, fields) {
					//connection.end();
					if (error) {
						cbk(error.message);
						return true;
					} else {
						cbk(results);
					}
				}); 
			}
		})(i);
	}
	
	CP1.serial(
		_f1,
		function(data) {
			connection.end();
			cbk(data.results);	
		},
		60000
	);
	
};


_f['Q0'] = function(cbk) {
	var cfg0 = require(env.space_path + '/api/cfg/db.json');
	var connection = mysql.createConnection(cfg0);
	connection.connect();

	var str = 'SELECT * FROM `videos_test` WHERE 1;';
	 
	connection.query(str, function (error, results, fields) {
		connection.end();
		if (error) {
			cbk(error.message);
			return true;
		} else {
			cbk(results);
		}
	});  
};
_f['Q1'] = function(cbk) {
	var cfg0 = require(env.space_path + '/api/cfg/db.json');
	var connection = mysql.createConnection(cfg0);
	connection.connect();

	var str = 'SELECT * FROM  `cloud_node` WHERE 1 ';

	connection.query(str, function (error, results, fields) {
		connection.end();
		if (error) {
			cbk(error.message);
			return true;
		} else {
			cbk(results);
		}
	});  
};
_f['Q2'] = function(cbk) {
	var cfg0 = require(env.space_path + '/api/cfg/db.json');
	var connection = mysql.createConnection(cfg0);
	connection.connect();

	var str = 'SELECT * FROM  `video_node` WHERE 1 ';

	connection.query(str, function (error, results, fields) {
		connection.end();
		if (error) {
			cbk(error.message);
			return true;
		} else {
			cbk(results);
		}
	});  
};

_f['Q3'] = function(cbk) {
	var cfg0 = require(env.space_path + '/api/cfg/db.json');
	var connection = mysql.createConnection(cfg0);
	connection.connect();

	var str = 'SELECT * FROM  `video_node` WHERE 1 ';

	connection.query(str, function (error, results, fields) {
		connection.end();
		if (error) {
			cbk(error.message);
			return true;
		} else {
			cbk(results);
		}
	});  
};

CP.serial(
	_f,
	function(data) {
		res.send(data.results);	
	},
	60000
);
